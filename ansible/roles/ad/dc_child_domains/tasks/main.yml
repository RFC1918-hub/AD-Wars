---
- name: "Configuring DNS settings to {{dns_domain}}"
  win_dns_client:
    adapter_names: '*'
    ipv4_addresses:
      - "{{dns_domain}}"
    log_path: C:\dns_log.txt

- name: Installing AD domain feature
  win_feature:
    name: AD-Domain-Services
    state: present
    include_management_tools: yes
  register: features

- name: Installing RSAT-ADDS feature
  win_feature:
    name: RSAT-ADDS
    state: present
    include_management_tools: yes
  register: features

- name: Creating child domain within {{parent_domain}}
  ansible.windows.win_powershell:
    script: |
      [CmdletBinding()]
      param (
          [String]
          $Password,
          [String]
          $DomainAdmin,
          [String]
          $ParentDomainName,
          [String]
          $NewDomainNetbiosName,
          [String]
          $ReplicationSourceDC,
          [String]
          $NewDomainName,
          [String]
          $DomSafePassword
      )
      try {
          $child_domain = Get-ADDomain -Identity $NewDomainName
          $domainExist=$true
      } catch [Microsoft.ActiveDirectory.Management.ADIdentityNotFoundException] {
          $domainExist=$false
      }
      if (-not $domainExist) {
        $Ansible.Changed = $true
        $pass = ConvertTo-SecureString $Password -AsPlainText -Force
        $Cred = New-Object System.Management.Automation.PSCredential ($DomainAdmin, $pass)
        $safePassword = ConvertTo-SecureString $DomSafePassword -AsPlainText -Force
        Install-ADDSDomain -Credential $Cred -SkipPreChecks -NewDomainName $NewDomainName -NewDomainNetbiosName $NewDomainNetbiosName -ParentDomainName $ParentDomainName -ReplicationSourceDC $ReplicationSourceDC -DatabasePath "C:\Windows\NTDS" -SYSVOLPath "C:\Windows\SYSVOL" -LogPath "C:\Windows\Logs" -SafeModeAdministratorPassword $safePassword -Force
      } else {
        $Ansible.Changed = $false
      }
    parameters:
      Password: "{{parent_domain_password}}"
      DomSafePassword: "{{domain_password}}"
      DomainAdmin: "{{parent_domain}}\\Administrator"
      ParentDomainName: "{{parent_domain}}"
      ReplicationSourceDC: "{{source_dc}}" 
      NewDomainNetbiosName: "{{netbios_name}}"
      NewDomainName: "{{domain.split('.')[0]}}"
  register:
    domain_install

- name: Waiting for dc to be restarted
  ansible.builtin.wait_for_connection:
    timeout: 900

- name: Ensure the server is a domain controller
  win_domain_controller:
    dns_domain_name: "{{domain}}"
    domain_admin_user: "{{domain}}\\Administrator"
    domain_admin_password: "{{domain_password}}"
    safe_mode_password: "{{domain_password}}"
    state: domain_controller
  register: check_domain_controller

- name: Reboot to complete domain controller setup
  win_reboot:
    test_command: "Get-ADUser -Identity Administrator -Properties *"
  when: check_domain_controller.changed

- name: Pause for 5 minutes for Active Directory services 
  ansible.builtin.pause:
    minutes: 5
  when: domain_install.changed

- name: Adding Administrator user to Domain Admin
  win_domain_group_membership:
    name: Domain Admins
    members:
      - Administrator
    state: present

- name: "Installing XactiveDirectory PowerShell module"
  win_psmodule:
    name: ActiveDirectoryDSC
    state: present