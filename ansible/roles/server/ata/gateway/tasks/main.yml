---
- name: Installing ATA gateways
  ansible.windows.win_powershell:
    script: |
      [CmdletBinding()] Param (

          [String]
          $ansible_username, 

          [String]
          $ansible_pass, 

          [String]
          $domain_controller,

          [String]
          $ata_admin_pass
      )

      $passwd = ConvertTo-SecureString $ansible_pass -AsPlainText -Force
      $creds = New-Object System.Management.Automation.PSCredential ($ansible_username, $passwd)
      Invoke-Command -ComputerName $domain_controller -Credential $creds -ScriptBlock {
          # Enable web requests to endpoints with invalid SSL certs (like self-signed certs)
          [System.Net.ServicePointManager]::ServerCertificateValidationCallback = {$true}

          Add-Content 'c:\\windows\\system32\\drivers\\etc\\hosts' '        192.168.56.22    jedi-archives.security.local'
          
          if (-not (Test-Path "C:\Program Files\Microsoft Advanced Threat Analytics")) {
              if (-not (Test-Path "$env:temp\gatewaysetup.zip")) {
                  $ProgressPreference = 'SilentlyContinue'
                  Invoke-WebRequest -uri https://jedi-archives/api/management/softwareUpdates/gateways/deploymentPackage -UseBasicParsing -OutFile "$env:temp\gatewaysetup.zip"
                  Expand-Archive -Path "$env:temp\gatewaysetup.zip" -DestinationPath "$env:temp\gatewaysetup" -Force    
              }

              try {
                  Set-Location "$env:temp\gatewaysetup"
                  Start-Process -Wait -FilePath ".\Microsoft ATA Gateway Setup.exe" -ArgumentList "/q NetFrameworkCommandLineArguments=`"/q`" ConsoleAccountName=`"admin`" ConsoleAccountPassword=$ata_admin_pass"
              }
              catch {
                  Exit 1
              }
          } else {
              if ((Get-Service "ATAGateway").Status -ne "Running") {
                  $Ansible.Changed = $true
              } else {
                  $Ansible.Changed = $false
                  Exit 0
              }
          }
      }
    parameters:
      domain_controller: "{{domain_controller}}"
      ata_admin_password: "{{ata_admin_password}}"
      ansible_username: "{{ansible_user}}"
      ansible_pass: "{{ansible_password}}"